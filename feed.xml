<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Ariel Elkin's Website</title>
  <link href="https://arielelkin.github.io/"/>
  <updated>2020-02-10T18:30:02Z</updated>
  <author>
    <name>Ariel Elkin</name>
  </author>
  <id>https://arielelkin.github.io/</id>

  <entry>
    <title>Digital Estate Planning</title>
    <link href="https://arielelkin.github.io/articles/digital-estate-planning"/>
    <id>https://arielelkin.github.io/articles/digital-estate-planning</id>
    <updated>2017-02-24T18:30:02Z</updated>
    <summary>The aim of the present article is to suggest a formal framework for thinking about digital estate planning: A **digital estate** is a set of digital _assets_ with pre-assigned _persistence types_. Its **planning** refers to a testator and a predesignated group of _executors_ following a predefined _protocol_ for the processing of the assets after the testator's death.</summary>
  </entry>

  <entry>
    <title>Easily sync and stream your entire music collection using Docker</title>
    <link href="https://arielelkin.github.io/articles/easily-sync-and-stream-your-entire-music-collection-using-docker"/>
    <id>https://arielelkin.github.io/articles/easily-sync-and-stream-your-entire-music-collection-using-docker</id>
    <updated>2017-03-28T18:30:02Z</updated>
    <summary>You like owning your music, but you own so many gigabytes of it that it's hard, if not impossible, to carry around.</summary>
  </entry>

  <entry>
    <title>Using The Amazing Audio Engine with the Synthesis Toolkit in C++</title>
    <link href="https://arielelkin.github.io/articles/mandolin"/>
    <id>https://arielelkin.github.io/articles/mandolin</id>
    <updated>2013-12-27T18:30:02Z</updated>
    <summary>In this tutorial we'll explore a technique for making musical instrument apps on iOS, by combining two fantastic open-source libraries: The Amazing Audio Engine and the Synthesis Toolkit in C++.</summary>
  </entry>

  <entry>
    <title>Easy and Robust Multicast Delegation in Objective-C</title>
    <link href="https://arielelkin.github.io/articles/objective-c-multicast-delegate"/>
    <id>https://arielelkin.github.io/articles/objective-c-multicast-delegate</id>
    <updated>2014-03-10T18:30:02Z</updated>
    <summary>Here's a simple and reliable way to implement one-to-many delegation in Objective-C.</summary>
  </entry>

  <entry>
    <title>UILabel + UIScrollView + Auto Layout</title>
    <link href="https://arielelkin.github.io/articles/uilabel-plus-uiscrollview-plus-autolayout"/>
    <id>https://arielelkin.github.io/articles/uilabel-plus-uiscrollview-plus-autolayout</id>
    <updated>2014-09-13T18:30:02Z</updated>
    <summary>In this article I'll explain how to easily fit a `UILabel` of variable height into a `UIScrollView` using Auto Layout, for those scenarios where a `UITextView` won't do.</summary>
  </entry>

  <entry>
    <title>Why I'm not a React Native Developer</title>
    <link href="https://arielelkin.github.io/articles/why-im-not-a-react-native-developer"/>
    <id>https://arielelkin.github.io/articles/why-im-not-a-react-native-developer</id>
    <updated>2016-09-21T18:30:02Z</updated>
    <summary>An in-depth comparison of React Native with Swift development.</summary>
  </entry>

  <entry>
    <title>Using Swift Enums for Solid UICollectionViews and UITableViews</title>
    <link href="https://insights.project-a.com/using-swift-enums-for-solid-uicollectionviews-and-uitableviews-bf5735a8cfdf"/>
    <id>https://insights.project-a.com/using-swift-enums-for-solid-uicollectionviews-and-uitableviews-bf5735a8cfdf</id>
    <updated>2015-11-30T18:30:02Z</updated>
    <summary>A good way to let the Swift compiler help you build a rock-solid UICollectionView or UITableView is to manage their layout structure through an enum. In this post, Iâ€™ll provide you with a basic implementation and discuss its benefits.</summary>
  </entry>

  <entry>
    <title>Padding and Spacing UIViews</title>
    <link href="https://insights.project-a.com/padding-and-spacing-uiviews-9ef25eb416c1"/>
    <id>https://insights.project-a.com/padding-and-spacing-uiviews-9ef25eb416c1</id>
    <updated>2016-08-24T18:30:02Z</updated>
    <summary>Techniques to create views that need to show padding, but which need the padding to disappear when their content is nil.</summary>
  </entry>

</feed>
